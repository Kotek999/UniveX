{"ast":null,"code":"import React from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\nimport isIOS from \"../../rules/resolutions/isIOS\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SafeArea = function SafeArea(props) {\n  var insets = useSafeAreaInsets();\n  var topArea = {\n    paddingTop: !isIOS() ? insets.top : 0\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsxs(View, {\n      style: topArea,\n      children: [isIOS() && _jsx(SafeAreaView, {\n        style: {\n          backgroundColor: \"red\"\n        }\n      }), _jsx(View, {\n        style: styles.topContainer,\n        children: _jsx(Text, {\n          children: props.screenTitle\n        })\n      })]\n    }), props.children]\n  });\n};\nexport default SafeArea;\nvar styles = StyleSheet.create({\n  topContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n    backgroundColor: \"cyan\"\n  }\n});","map":{"version":3,"names":["React","useSafeAreaInsets","isIOS","SafeArea","props","insets","topArea","paddingTop","top","flex","backgroundColor","styles","topContainer","screenTitle","children","StyleSheet","create","flexDirection","justifyContent","alignItems","alignContent"],"sources":["C:/Users/Filip Tankiewicz/Documents/ReactNativeBaseProjects/UniveX/src/common/SafeArea/index.tsx"],"sourcesContent":["import React, { Fragment, ReactElement } from \"react\";\r\nimport { SafeAreaView, Text, View, StyleSheet } from \"react-native\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\nimport isIOS from \"../../rules/resolutions/isIOS\";\r\n\r\ninterface SafeProps {\r\n  screenTitle?: string;\r\n  children: ReactElement;\r\n}\r\n\r\nconst SafeArea = (props: SafeProps) => {\r\n  const insets = useSafeAreaInsets();\r\n\r\n  const topArea = {\r\n    paddingTop: !isIOS() ? insets.top : 0,\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <View style={topArea}>\r\n        {isIOS() && <SafeAreaView style={{ backgroundColor: \"red\" }} />}\r\n        <View style={styles.topContainer}>\r\n          <Text>{props.screenTitle}</Text>\r\n        </View>\r\n      </View>\r\n      {props.children}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SafeArea;\r\n\r\nconst styles = StyleSheet.create({\r\n  topContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignContent: \"center\",\r\n    backgroundColor: \"cyan\",\r\n  },\r\n});\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAkC,OAAO;AAAC;AAAA;AAAA;AAAA;AAEtD,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,OAAOC,KAAK;AAAsC;AAAA;AAOlD,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,KAAgB,EAAK;EACrC,IAAMC,MAAM,GAAGJ,iBAAiB,EAAE;EAElC,IAAMK,OAAO,GAAG;IACdC,UAAU,EAAE,CAACL,KAAK,EAAE,GAAGG,MAAM,CAACG,GAAG,GAAG;EACtC,CAAC;EAED,OACE,MAAC,IAAI;IAAC,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAE;IAAA,WACvB,MAAC,IAAI;MAAC,KAAK,EAAEH,OAAQ;MAAA,WAClBJ,KAAK,EAAE,IAAI,KAAC,YAAY;QAAC,KAAK,EAAE;UAAEQ,eAAe,EAAE;QAAM;MAAE,EAAG,EAC/D,KAAC,IAAI;QAAC,KAAK,EAAEC,MAAM,CAACC,YAAa;QAAA,UAC/B,KAAC,IAAI;UAAA,UAAER,KAAK,CAACS;QAAW;MAAQ,EAC3B;IAAA,EACF,EACNT,KAAK,CAACU,QAAQ;EAAA,EACV;AAEX,CAAC;AAED,eAAeX,QAAQ;AAEvB,IAAMQ,MAAM,GAAGI,UAAU,CAACC,MAAM,CAAC;EAC/BJ,YAAY,EAAE;IACZK,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,YAAY,EAAE,QAAQ;IACtBV,eAAe,EAAE;EACnB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}