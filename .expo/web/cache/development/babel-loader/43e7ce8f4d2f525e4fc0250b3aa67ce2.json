{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeArea from \"../../common/SafeArea\";\nimport { Card, Title, Button, TextInput } from \"react-native-paper\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar backgroundImage = require(\"../../images/backgroundTheme.jpg\");\nvar SignIn = function SignIn() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    text = _useState2[0],\n    setText = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    visible = _useState4[0],\n    setVisible = _useState4[1];\n  var onToggleSnackBar = function onToggleSnackBar() {\n    return setVisible(!visible);\n  };\n  var isGuest = function isGuest() {\n    !visible ? navigation.navigate(\"Home\") : navigation.navigate(\"HomeGuest\");\n  };\n  var navigation = useNavigation();\n  return _jsx(SafeArea, {\n    titleOn: false,\n    isSignIn: true,\n    children: _jsx(ImageBackground, {\n      source: backgroundImage,\n      resizeMode: \"cover\",\n      style: {\n        flex: 1,\n        justifyContent: \"center\"\n      },\n      children: _jsx(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          alignContent: \"center\"\n        },\n        children: _jsxs(Card, {\n          style: {\n            width: \"80%\",\n            padding: 20,\n            borderRadius: 20,\n            backgroundColor: \"white\",\n            shadowColor: \"black\",\n            shadowOffset: {\n              width: 0,\n              height: 2\n            },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n            elevation: 5\n          },\n          children: [_jsxs(Card.Content, {\n            children: [_jsx(Title, {\n              children: \"Logowanie\"\n            }), _jsxs(Text, {\n              style: {\n                fontFamily: \"Roboto\"\n              },\n              children: [\"Tw\\xF3j status: \", !visible ? \"Offline\" : \"Gość\"]\n            }), _jsx(TextInput, {\n              mode: \"outlined\",\n              label: \"Nazwa\",\n              value: text,\n              style: {\n                marginTop: 24\n              },\n              onChangeText: function onChangeText(text) {\n                return setText(text);\n              }\n            }), _jsx(TextInput, {\n              mode: \"outlined\",\n              label: \"Has\\u0142o\",\n              style: {\n                marginTop: 10\n              },\n              secureTextEntry: true,\n              right: _jsx(TextInput.Icon, {\n                icon: \"eye\"\n              })\n            })]\n          }), _jsxs(View, {\n            style: {\n              marginTop: 24,\n              marginBottom: 20,\n              alignItems: \"center\"\n            },\n            children: [_jsx(Button, {\n              mode: \"outlined\",\n              onPress: function onPress() {\n                return isGuest();\n              },\n              style: {\n                width: \"90%\",\n                backgroundColor: \"gray\"\n              },\n              children: _jsx(Text, {\n                style: {\n                  color: \"white\"\n                },\n                children: !visible ? \"Zaloguj Się\" : \"Zaloguj się jako Gość\"\n              })\n            }), _jsx(View, {\n              style: {\n                padding: 10\n              },\n              children: _jsx(Text, {\n                children: \"Nie masz konta? Zaloguj si\\u0119 jako Go\\u015B\\u0107\"\n              })\n            }), _jsx(Button, {\n              mode: \"outlined\",\n              onPress: onToggleSnackBar,\n              children: \"Zweryfikuj\"\n            })]\n          })]\n        })\n      })\n    })\n  });\n};\nexport default SignIn;","map":{"version":3,"names":["React","useState","SafeArea","Card","Title","Button","TextInput","useNavigation","backgroundImage","require","SignIn","text","setText","visible","setVisible","onToggleSnackBar","isGuest","navigation","navigate","flex","justifyContent","flexDirection","alignItems","alignContent","width","padding","borderRadius","backgroundColor","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","fontFamily","marginTop","marginBottom","color"],"sources":["C:/Users/Filip Tankiewicz/Documents/ReactNativeBaseProjects/UniveX/src/components/SignIn/index.tsx"],"sourcesContent":["import React, { FC, useState } from \"react\";\r\nimport { Text, ImageBackground, View } from \"react-native\";\r\nimport SafeArea from \"../../common/SafeArea\";\r\nimport { Card, Title, Button, TextInput } from \"react-native-paper\";\r\nimport { NavigationPropsList } from \"../../../rootRouter\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\n\r\nconst backgroundImage = require(\"../../images/backgroundTheme.jpg\");\r\n\r\nconst SignIn: FC = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const onToggleSnackBar = () => setVisible(!visible);\r\n\r\n  const isGuest = () => {\r\n    !visible ? navigation.navigate(\"Home\") : navigation.navigate(\"HomeGuest\");\r\n  };\r\n\r\n  const navigation =\r\n    useNavigation<NativeStackNavigationProp<NavigationPropsList>>();\r\n\r\n  return (\r\n    <SafeArea titleOn={false} isSignIn={true}>\r\n      <ImageBackground\r\n        source={backgroundImage}\r\n        resizeMode=\"cover\"\r\n        style={{ flex: 1, justifyContent: \"center\" }}\r\n      >\r\n        {/* <Text>Siema to logowanko</Text> */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            alignContent: \"center\",\r\n          }}\r\n        >\r\n          <Card\r\n            style={{\r\n              width: \"80%\",\r\n              padding: 20,\r\n              borderRadius: 20,\r\n              backgroundColor: \"white\",\r\n              shadowColor: \"black\",\r\n              shadowOffset: {\r\n                width: 0,\r\n                height: 2,\r\n              },\r\n              shadowOpacity: 0.25,\r\n              shadowRadius: 3.84,\r\n\r\n              elevation: 5,\r\n            }}\r\n          >\r\n            <Card.Content>\r\n              <Title>Logowanie</Title>\r\n              <Text style={{fontFamily: \"Roboto\"}}>Twój status: {!visible ? \"Offline\" : \"Gość\"}</Text>\r\n              <TextInput\r\n                mode=\"outlined\"\r\n                label=\"Nazwa\"\r\n                value={text}\r\n                style={{ marginTop: 24 }}\r\n                onChangeText={(text) => setText(text)}\r\n              />\r\n              <TextInput\r\n                mode=\"outlined\"\r\n                label=\"Hasło\"\r\n                style={{ marginTop: 10 }}\r\n                secureTextEntry\r\n                right={<TextInput.Icon icon=\"eye\" />}\r\n              />\r\n              {/* <Paragraph>Card content</Paragraph> */}\r\n            </Card.Content>\r\n            <View\r\n              style={{ marginTop: 24, marginBottom: 20, alignItems: \"center\" }}\r\n            >\r\n              <Button\r\n                mode=\"outlined\"\r\n                onPress={() => isGuest()}\r\n                style={{ width: \"90%\", backgroundColor: \"gray\" }}\r\n              >\r\n                <Text style={{ color: \"white\" }}>\r\n                  {!visible ? \"Zaloguj Się\" : \"Zaloguj się jako Gość\"}\r\n                </Text>\r\n              </Button>\r\n              <View style={{ padding: 10 }}>\r\n                <Text>Nie masz konta? Zaloguj się jako Gość</Text>\r\n              </View>\r\n              {/* <Button onPress={onToggleSnackBar} icon={visible ? \"check\" : \"close\"}></Button> */}\r\n              <Button mode=\"outlined\" onPress={onToggleSnackBar}>\r\n                Zweryfikuj\r\n              </Button>\r\n            </View>\r\n          </Card>\r\n        </View>\r\n      </ImageBackground>\r\n    </SafeArea>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAQC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAE5C,OAAOC,QAAQ;AACf,SAASC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,SAAS,QAAQ,oBAAoB;AAEnE,SAASC,aAAa,QAAQ,0BAA0B;AAAC;AAAA;AAGzD,IAAMC,eAAe,GAAGC,OAAO,oCAAoC;AAEnE,IAAMC,MAAU,GAAG,SAAbA,MAAU,GAAS;EACvB,gBAAwBT,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7BU,IAAI;IAAEC,OAAO;EACpB,iBAA8BX,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtCY,OAAO;IAAEC,UAAU;EAE1B,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB;IAAA,OAASD,UAAU,CAAC,CAACD,OAAO,CAAC;EAAA;EAEnD,IAAMG,OAAO,GAAG,SAAVA,OAAO,GAAS;IACpB,CAACH,OAAO,GAAGI,UAAU,CAACC,QAAQ,CAAC,MAAM,CAAC,GAAGD,UAAU,CAACC,QAAQ,CAAC,WAAW,CAAC;EAC3E,CAAC;EAED,IAAMD,UAAU,GACdV,aAAa,EAAkD;EAEjE,OACE,KAAC,QAAQ;IAAC,OAAO,EAAE,KAAM;IAAC,QAAQ,EAAE,IAAK;IAAA,UACvC,KAAC,eAAe;MACd,MAAM,EAAEC,eAAgB;MACxB,UAAU,EAAC,OAAO;MAClB,KAAK,EAAE;QAAEW,IAAI,EAAE,CAAC;QAAEC,cAAc,EAAE;MAAS,CAAE;MAAA,UAG7C,KAAC,IAAI;QACH,KAAK,EAAE;UACLC,aAAa,EAAE,KAAK;UACpBD,cAAc,EAAE,QAAQ;UACxBE,UAAU,EAAE,QAAQ;UACpBC,YAAY,EAAE;QAChB,CAAE;QAAA,UAEF,MAAC,IAAI;UACH,KAAK,EAAE;YACLC,KAAK,EAAE,KAAK;YACZC,OAAO,EAAE,EAAE;YACXC,YAAY,EAAE,EAAE;YAChBC,eAAe,EAAE,OAAO;YACxBC,WAAW,EAAE,OAAO;YACpBC,YAAY,EAAE;cACZL,KAAK,EAAE,CAAC;cACRM,MAAM,EAAE;YACV,CAAC;YACDC,aAAa,EAAE,IAAI;YACnBC,YAAY,EAAE,IAAI;YAElBC,SAAS,EAAE;UACb,CAAE;UAAA,WAEF,MAAC,IAAI,CAAC,OAAO;YAAA,WACX,KAAC,KAAK;cAAA;YAAA,EAAkB,EACxB,MAAC,IAAI;cAAC,KAAK,EAAE;gBAACC,UAAU,EAAE;cAAQ,CAAE;cAAA,+BAAe,CAACrB,OAAO,GAAG,SAAS,GAAG,MAAM;YAAA,EAAQ,EACxF,KAAC,SAAS;cACR,IAAI,EAAC,UAAU;cACf,KAAK,EAAC,OAAO;cACb,KAAK,EAAEF,IAAK;cACZ,KAAK,EAAE;gBAAEwB,SAAS,EAAE;cAAG,CAAE;cACzB,YAAY,EAAE,sBAACxB,IAAI;gBAAA,OAAKC,OAAO,CAACD,IAAI,CAAC;cAAA;YAAC,EACtC,EACF,KAAC,SAAS;cACR,IAAI,EAAC,UAAU;cACf,KAAK,EAAC,YAAO;cACb,KAAK,EAAE;gBAAEwB,SAAS,EAAE;cAAG,CAAE;cACzB,eAAe;cACf,KAAK,EAAE,KAAC,SAAS,CAAC,IAAI;gBAAC,IAAI,EAAC;cAAK;YAAI,EACrC;UAAA,EAEW,EACf,MAAC,IAAI;YACH,KAAK,EAAE;cAAEA,SAAS,EAAE,EAAE;cAAEC,YAAY,EAAE,EAAE;cAAEd,UAAU,EAAE;YAAS,CAAE;YAAA,WAEjE,KAAC,MAAM;cACL,IAAI,EAAC,UAAU;cACf,OAAO,EAAE;gBAAA,OAAMN,OAAO,EAAE;cAAA,CAAC;cACzB,KAAK,EAAE;gBAAEQ,KAAK,EAAE,KAAK;gBAAEG,eAAe,EAAE;cAAO,CAAE;cAAA,UAEjD,KAAC,IAAI;gBAAC,KAAK,EAAE;kBAAEU,KAAK,EAAE;gBAAQ,CAAE;gBAAA,UAC7B,CAACxB,OAAO,GAAG,aAAa,GAAG;cAAuB;YAC9C,EACA,EACT,KAAC,IAAI;cAAC,KAAK,EAAE;gBAAEY,OAAO,EAAE;cAAG,CAAE;cAAA,UAC3B,KAAC,IAAI;gBAAA;cAAA;YAA6C,EAC7C,EAEP,KAAC,MAAM;cAAC,IAAI,EAAC,UAAU;cAAC,OAAO,EAAEV,gBAAiB;cAAA;YAAA,EAEzC;UAAA,EACJ;QAAA;MACF;IACF;EACS,EACT;AAEf,CAAC;AAED,eAAeL,MAAM"},"metadata":{},"sourceType":"module"}